[{"D:\\CaroOnline\\src\\front-end\\src\\index.js":"1","D:\\CaroOnline\\src\\front-end\\src\\webSocketClient.js":"2","D:\\CaroOnline\\src\\front-end\\src\\App.js":"3","D:\\CaroOnline\\src\\front-end\\src\\components\\CheckMail\\index.js":"4","D:\\CaroOnline\\src\\front-end\\src\\components\\Google\\index.js":"5","D:\\CaroOnline\\src\\front-end\\src\\components\\Register\\index.js":"6","D:\\CaroOnline\\src\\front-end\\src\\components\\MailValidate\\index.js":"7","D:\\CaroOnline\\src\\front-end\\src\\components\\Login\\index.js":"8","D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\index.js":"9","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\index.js":"10","D:\\CaroOnline\\src\\front-end\\src\\components\\Profile\\index.js":"11","D:\\CaroOnline\\src\\front-end\\src\\api\\userApi.js":"12","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\square.js":"13","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\chat.js":"14","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\gameInfo.js":"15","D:\\CaroOnline\\src\\front-end\\src\\api\\axiosClient.js":"16","D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\rankingBoard.js":"17"},{"size":256,"mtime":1608290034436,"results":"18","hashOfConfig":"19"},{"size":1284,"mtime":1609680579615,"results":"20","hashOfConfig":"19"},{"size":7389,"mtime":1609940747510,"results":"21","hashOfConfig":"19"},{"size":765,"mtime":1608374402715,"results":"22","hashOfConfig":"19"},{"size":602,"mtime":1609940073621,"results":"23","hashOfConfig":"19"},{"size":4526,"mtime":1608394987040,"results":"24","hashOfConfig":"19"},{"size":2009,"mtime":1608450297084,"results":"25","hashOfConfig":"19"},{"size":4749,"mtime":1609159578986,"results":"26","hashOfConfig":"19"},{"size":11915,"mtime":1609851162643,"results":"27","hashOfConfig":"19"},{"size":6324,"mtime":1609945820161,"results":"28","hashOfConfig":"19"},{"size":2357,"mtime":1609846062017,"results":"29","hashOfConfig":"19"},{"size":3089,"mtime":1609850278584,"results":"30","hashOfConfig":"19"},{"size":364,"mtime":1609944379312,"results":"31","hashOfConfig":"19"},{"size":3078,"mtime":1609164745078,"results":"32","hashOfConfig":"19"},{"size":1016,"mtime":1609945358487,"results":"33","hashOfConfig":"19"},{"size":1023,"mtime":1608282954373,"results":"34","hashOfConfig":"19"},{"size":1530,"mtime":1609940138550,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"112nzf5",{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"38"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"38"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"38"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59","usedDeprecatedRules":"38"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":9,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"38"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"38"},"D:\\CaroOnline\\src\\front-end\\src\\index.js",[],["79","80"],"D:\\CaroOnline\\src\\front-end\\src\\webSocketClient.js",[],"D:\\CaroOnline\\src\\front-end\\src\\App.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\CheckMail\\index.js",["81","82"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container:{\r\n        height: '500px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    notification:{\r\n        fontSize: '2.5vw',\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nexport default function CheckMail(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.notification}>\r\n                <b>Register completed!</b>\r\n                <br/>\r\n                One more step, check out your mail to finish the comfirmation!\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\Google\\index.js",["83","84"],"import React, { useEffect } from 'react';\r\nimport { useHistory } from 'react-router';\r\n\r\nexport default function Google(props) {\r\n    const history = useHistory();\r\n\r\n    const username = (new URL(document.location)).searchParams.get('user');\r\n    const token = (new URL(document.location)).searchParams.get('token');\r\n\r\n    useEffect(() => {\r\n        localStorage.setItem(\"username\", username);\r\n        localStorage.setItem(\"token\", token);\r\n        localStorage.setItem(\"loginStatus\", true);\r\n        props.handleChangeLoginStatus();\r\n        history.push('/');\r\n    }, []);\r\n\r\n    return (null);\r\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\Register\\index.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\MailValidate\\index.js",["85","86"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from '../../api/userApi';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: '500px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    notification: {\r\n        fontSize: '2.5vw',\r\n        textAlign: 'center'\r\n    },\r\n    loading: {\r\n        width: '1em',\r\n        height: '1em',\r\n        display: 'inline-block',\r\n        textAlign: 'left'\r\n    }\r\n}));\r\n\r\nlet createCallback=0;\r\nconst timeInterval=200;\r\n\r\nexport default function MailValidate(props) {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState('...');\r\n    const history = useHistory();\r\n\r\n    // update loading\r\n    let current=new Date().getTime();\r\n    // create only 1 callback at a time\r\n    if (current-createCallback>=timeInterval){\r\n        createCallback=current;\r\n        setTimeout(() => {\r\n            if (loading.length < 3) {\r\n                setLoading(loading + '.');\r\n            } else {\r\n                setLoading('');\r\n            }\r\n        }, timeInterval);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        // get username from url\r\n        let username = (new URL(document.location)).searchParams.get('username');\r\n        // call api for validation\r\n        await api.validate(username);\r\n        // delete all local storages on App\r\n        localStorage.setItem(\"username\", \"\");\r\n        localStorage.setItem(\"loginStatus\", \"false\");\r\n        localStorage.setItem(\"token\", \"\");\r\n        setTimeout(() => history.push('/signin'), 5000);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.notification}>\r\n                <b>Almost done!</b>\r\n                <br />\r\n                Wait for a moment <div className={classes.loading}>{loading}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\Login\\index.js",["87","88"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Avatar, Button, CssBaseline, TextField, Typography, makeStyles, Container } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport './index.css';\r\nimport api from '../../api/userApi';\r\nimport facebookImg from '../../images/facebook.png';\r\nimport googleImg from '../../images/google.png';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n\r\n    const token = localStorage.getItem(\"token\");\r\n    const handleChangeLoginStatus = props.handleChangeLoginStatus;\r\n\r\n    useEffect(() => {\r\n        if (token) { // TODO\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    const handleUsernameChange = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        let response = await api.login(username, password);\r\n        if (response.message) {\r\n            if (response.message == 'Invalid') {\r\n                alert(\"Username or password is not correct. Please try again!\");\r\n            } else {\r\n                alert(\"Check out your email to validate this account!\");\r\n            }\r\n            history.push('/signin');\r\n        } else {\r\n            const data = response.data;\r\n            localStorage.setItem(\"token\", data.token);\r\n            localStorage.setItem(\"username\", data.user.username)\r\n            handleChangeLoginStatus();\r\n            alert('Successfully loged in. Welcome to Home!');\r\n            history.push('/');\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form method=\"POST\" className={classes.form} onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"userName\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleUsernameChange}\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        onChange={handlePasswordChange}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                    <div className='link'>\r\n                        <button className='social-button' onClick={() => { window.location.href = 'http://localhost:3001/auth/fb' }}>\r\n                            <img src={facebookImg} className='facebook-login-image' alt='facebook-img'></img>\r\n                        </button>\r\n                        <button className='social-button' onClick={() => { window.location.href = 'http://localhost:3001/auth/google' }}>\r\n                            <img src={googleImg} className='google-login-image' alt='google-img'></img>\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\index.js",["89","90","91","92","93","94"],"import RankingBoard from './rankingBoard';\r\nimport React, { useEffect, useState } from 'react';\r\nimport './index.css';\r\nimport ws from '../../webSocketClient';\r\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport { useHistory, Link } from 'react-router-dom';\r\nimport api from '../../api/userApi';\r\nimport {\r\n    Grid, Container, Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\r\n    Card, CardActionArea, CardActions, CardContent, Typography, Paper, InputBase, IconButton\r\n} from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        padding: '2px 4px',\r\n        display: 'flex',\r\n        alignItems: 'center',\r\n        width: 400,\r\n    },\r\n    input: {\r\n        marginLeft: theme.spacing(1),\r\n        flex: 1,\r\n    },\r\n    iconButton: {\r\n        padding: 10,\r\n    },\r\n    icon: {\r\n        marginRight: theme.spacing(2),\r\n    },\r\n    heroContent: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(8, 0, 6),\r\n    },\r\n    heroButtons: {\r\n        marginTop: theme.spacing(4),\r\n    },\r\n    cardGrid: {\r\n        paddingTop: theme.spacing(8),\r\n        paddingBottom: theme.spacing(8),\r\n    },\r\n    card: {\r\n        height: '100%',\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n    },\r\n    cardMedia: {\r\n        paddingTop: '56.25%', // 16:9\r\n    },\r\n    cardContent: {\r\n        flexGrow: 1,\r\n    },\r\n    footer: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(6),\r\n    },\r\n}));\r\n\r\nconst boardsList = boards => (\r\n    boards.map((board) => {\r\n        return (\r\n            <BoardItem key={board.boardId}\r\n                boardItem={board} />\r\n        );\r\n    })\r\n);\r\n\r\nconst usersList = users => (\r\n    users.map(user => {\r\n        return (\r\n            <UserItem key={user.username} user={user} />\r\n        );\r\n    })\r\n);\r\n\r\nexport default function Home() {\r\n    const classes = useStyles();\r\n    const [users, setUsers] = useState([]);\r\n    const [boards, setBoards] = useState([]);\r\n    const [searchedBoardIdText, setSearchedBoardIdText] = useState('');\r\n    const [rankingBoard, setRankingBoard] = useState([]);\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        (async () => {\r\n            // call API and get boards\r\n            let response = await api.getAllBoards();\r\n            if (response.message) {\r\n                history.push('/signin');\r\n                return;\r\n            }\r\n            // set boards list\r\n            setBoards(response);\r\n            // init web socket client\r\n            ws.createConnection(localStorage.getItem('username'), (topicName) => {\r\n                let callbacks = {\r\n                    usersList: async () => {\r\n                        let arr = await api.getUsers();\r\n                        setUsers(arr);\r\n                    },\r\n                    boardsList: async () => {\r\n                        let arr = await api.getAllBoards();\r\n                        setBoards(arr);\r\n                    },\r\n                };\r\n                const topic = topicName.split('>>>')[0];\r\n                if (callbacks[topic]) {\r\n                    callbacks[topic]();\r\n                }\r\n            });\r\n            ws.subscribeTopic('boardsList');\r\n            ws.subscribeTopic('usersList');\r\n            // get users list\r\n            let arr = await api.getUsers();\r\n            setUsers(arr);\r\n            // get ranking board\r\n            const rankingBoard = await api.getRankingBoard();\r\n            setRankingBoard(rankingBoard);\r\n        })();\r\n    }, []);\r\n\r\n    const handleJoinGameById = async () => {\r\n        const boardId = searchedBoardIdText;\r\n        const boardResponse = await api.getBoard(boardId);\r\n        if (boardResponse._id) {\r\n            const username = localStorage.getItem(\"username\");\r\n            if (username == boardResponse.userId1) {\r\n                alert('You are already the owner of this game!');\r\n                history.push(`/board?id=${boardId}`);\r\n            } else {\r\n                if (!boardResponse.userId2) {\r\n                    await api.joinBoard(boardId);\r\n                    history.push(`/board?id=${boardId}`);\r\n                    alert(\"You have successfully joined the game as the second player. Play your best!\");\r\n                } else {\r\n                    history.push(`/board?id=${boardId}`);\r\n                    if (boardResponse.userId2 == username) {\r\n                        alert(\"You already joined this game as a player!\");\r\n                    } else {\r\n                        alert(\"This game is full. You have joined the game as a spectator. Enjoy the match!\");\r\n                    }\r\n                }\r\n            }\r\n        } else {\r\n            alert(\"There is no game to match your search. Please try again!\");\r\n        }\r\n    }\r\n\r\n    return (\r\n        <main>\r\n            <div className=\"home-container\">\r\n                <div>\r\n                    <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={4} md={4}>\r\n                                <Paper variant=\"outlined\" style={{ display: 'flex' }}>\r\n                                    <InputBase\r\n                                        className={classes.input}\r\n                                        placeholder=\"Join game by id/key\"\r\n                                        inputProps={{ 'aria-label': 'join game by key' }}\r\n                                        onChange={(e) => {\r\n                                            setSearchedBoardIdText(e.target.value)\r\n                                        }}\r\n                                    />\r\n                                    <IconButton onClick={handleJoinGameById} className={classes.iconButton} aria-label=\"join\">\r\n                                        <ArrowForwardIcon />\r\n                                    </IconButton>\r\n                                </Paper>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Grid container spacing={4}>\r\n                            <Grid item xs={12} sm={4} md={4}>\r\n                                <AddBoardDialog callback={setBoards} />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Container>\r\n                    <Container className={classes.cardGrid} maxWidth=\"md\">\r\n                        <Grid container spacing={4}>\r\n                            {boardsList(boards)}\r\n                        </Grid>\r\n                    </Container>\r\n                </div>\r\n                <div className=\"right-panel\">\r\n                    <div className='right-panel-container'>\r\n                        <div className='users-list'>\r\n                            {usersList(users)}\r\n                        </div>\r\n                        <RankingBoard rankingBoard={rankingBoard}/>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </main>\r\n    );\r\n}\r\n\r\nfunction BoardItem(props) {\r\n    const classes = useStyles();\r\n    const board = props.boardItem;\r\n    const history = useHistory();\r\n\r\n    async function viewGame() {\r\n        history.push(`/board?id=${board.boardId}`);\r\n    }\r\n\r\n    return (\r\n        <Grid item xs={12} sm={6} md={4}>\r\n            <Card variant=\"outlined\" className={classes.card}>\r\n                <CardActionArea style={{ flexGrow: 1 }}>\r\n                    <CardContent className={classes.cardContent}>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {board.name}\r\n                        </Typography>\r\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\r\n                            {board.boardId}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {board.userId1}\r\n                        </Typography>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                            {board.userId2}\r\n                        </Typography>\r\n                    </CardContent>\r\n                </CardActionArea>\r\n                {/* </Link> */}\r\n                <CardActions >\r\n                    <Button variant=\"outlined\" color=\"primary\" onClick={viewGame}>\r\n                        VIEW GAME\r\n                </Button>\r\n                </CardActions>\r\n            </Card>\r\n        </Grid>\r\n    );\r\n}\r\n\r\nfunction UserItem(props) {\r\n    const user = props.user;\r\n    const history = useHistory();\r\n\r\n    let statusColor = (user.isActive ? \"#00ff00\" : \"#aaaaaa\");\r\n\r\n    return (\r\n        <div\r\n            className=\"user-item\"\r\n            onClick={() => {\r\n                history.push(`/detail?user=${user.username}`);\r\n            }}\r\n        >\r\n            <div style={{ display: \"flex\", alignItems: \"center\" }}><FiberManualRecordIcon style={{ color: statusColor }} /></div>\r\n            <div style={{ marginLeft: \"5px\", display: \"flex\", alignItems: \"center\" }}>{user.username}</div>\r\n            <div style={{ flexGrow: 1 }}></div>\r\n            <button\r\n                style={{\r\n                    width: \"4rem\",\r\n                    margin: \"5px\",\r\n                    ...(user.username == localStorage.getItem('username') ? { display: \"none\" } : {}),\r\n                    cursor: \"pointer\"\r\n                }}\r\n                disabled={!user.isActive}\r\n                onClick={e => {\r\n                    e.stopPropagation();\r\n                }}\r\n            >Invite</button>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction AddBoardDialog(props) {\r\n    const [open, setOpen] = React.useState(false);\r\n    const [nameText, setNameText] = React.useState('');\r\n\r\n    const handleClickOpen = () => {\r\n        setOpen(true);\r\n    };\r\n\r\n    const handleClose = () => {\r\n        setOpen(false);\r\n        setNameText('');\r\n    };\r\n\r\n    const handleNameChange = (e) => {\r\n        setNameText(e.target.value);\r\n    };\r\n\r\n    async function createNewBoard(e) {\r\n        handleClose();\r\n        const response = await api.createBoard(nameText, nameText);\r\n        if (response != 'Success') {\r\n            alert(response);\r\n            return;\r\n        }\r\n        ws.notifyChange('boardsList');\r\n    }\r\n\r\n    return (\r\n        <div style={{ position: 'absolute' }}>\r\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\r\n                Create game\r\n            </Button>\r\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\r\n                <DialogTitle id=\"form-dialog-title\">Create game</DialogTitle>\r\n                <DialogContent>\r\n                    <DialogContentText>\r\n                        To create a new game, please fill out board's name in the box.\r\n                    </DialogContentText>\r\n                    <TextField\r\n                        autoFocus\r\n                        margin=\"dense\"\r\n                        id=\"name\"\r\n                        label=\"Name\"\r\n                        variant=\"outlined\"\r\n                        fullWidth\r\n                        onChange={handleNameChange}\r\n                    />\r\n                    <DialogActions>\r\n                        <Button onClick={handleClose} color=\"primary\">\r\n                            Cancel\r\n                            </Button>\r\n                        <Button type=\"submit\" color=\"primary\" onClick={createNewBoard}>\r\n                            Create\r\n                            </Button>\r\n                    </DialogActions>\r\n                </DialogContent>\r\n            </Dialog>\r\n        </div>\r\n    );\r\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\index.js",["95","96","97","98","99","100","101","102","103"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Profile\\index.js",["104"],"import './index.css';\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport api from '../../api/userApi';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function UserProfile() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState({});\r\n\r\n    useEffect(() => {\r\n        const username = (new URL(document.location)).searchParams.get('user');\r\n\r\n        (async () => {\r\n            let response = await api.getUserByUsername(username);\r\n            if (response.message) {\r\n                history.push('/signin');\r\n                return;\r\n            }\r\n            setUser(response);\r\n        })();\r\n    }, []);\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Profile\r\n                </Typography>\r\n                <div className='profile-content'>\r\n                    <div>Username: <b>{user.username}</b></div><br />\r\n                    <div>Email: <b>{user.email}</b></div><br />\r\n                    <div>Games won: <b>{user.win}</b></div><br />\r\n                    <div>Games lost: <b>{user.lose}</b></div><br />\r\n                    <div>Trophy: <b>{user.trophy}</b></div>\r\n                </div>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","D:\\CaroOnline\\src\\front-end\\src\\api\\userApi.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\square.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\chat.js",["105","106","107","108","109"],"import React, { useEffect, useState } from 'react';\nimport api from '../../api/userApi';\nimport './index.css';\nimport ws from '../../webSocketClient';\n\nconst Chat = (props) => {\n    const [msg,setMsg]=useState(\"\");\n\n    function getListChat(){\n        let chat=props.chat;\n        let jsx=[];\n        let username=localStorage.getItem('username');\n        for (let i=0; i<chat.length; i++){\n            if (chat[i].from==username){\n                jsx.push(\n                    <div key={chat[i].time} className='message-tag-right'>\n                        <div></div>\n                        <div \n                            style={{\n                                backgroundColor: \"#99eeee\", \n                                borderRadius: \"5px\",\n                                margin: \"10px\",\n                                boxSizing: \"border-box\",\n                                textAlign: \"left\",\n                                padding: \"10px\"\n                            }}>\n                            {chat[i].content}\n                        </div>\n                    </div>\n                );\n            } else {\n                jsx.push(\n                    <div key={chat[i].time} className='message-tag-left'>\n                        <div\n                            style={{\n                                backgroundColor: (chat[i].from==props.participant1 || chat[i].from==props.participant2 ? \"#c7ffba\" : \"#dddddd\"), \n                                borderRadius: \"5px\",\n                                margin: \"10px\",\n                                boxSizing: \"border-box\",\n                                textAlign: \"left\",\n                                padding: \"10px\"\n                            }}\n                        >\n                            <div style={{fontSize: \"0.75em\"}}>{chat[i].from}:</div>\n                            <div>{chat[i].content}</div>\n                        </div>\n                    </div>\n                );\n            }\n        }\n        return jsx;\n    }   \n    \n    let listChat=getListChat();\n\n    async function sendMessage(){\n        await api.makeMessage(props.boardId,new Date().getTime(),msg); \n        ws.notifyChange(props.topicName);\n        setMsg('');\n    }\n\n    return (\n        <div className='chat-frame'>\n            <div className=\"list-chat\" id='listChat'>\n                {listChat}\n            </div>\n            <div className='text-box'>\n                <input \n                    className='message-text-box' \n                    onChange={(e)=>{\n                        setMsg(e.target.value);\n                    }}\n                    onKeyPress={(e)=>{\n                        if ((e.code || e.key)=='Enter'){\n                            // ENTER is pressed\n                            sendMessage();\n                        }\n                    }}\n                    type='text'\n                    value={msg}\n                />\n                <button className='send-button' onClick={sendMessage}>SEND</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\gameInfo.js",["110","111","112","113"],"D:\\CaroOnline\\src\\front-end\\src\\api\\axiosClient.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\rankingBoard.js",["114","115"],"import React, { useEffect, useState } from 'react';\r\nimport './index.css';\r\n\r\nfunction getRow(index, item) {\r\n    return (\r\n        <div key={item._id} style={{ display: 'flex' }}>\r\n            <div style={{ width: '2em', textAlign: 'left', borderRight: '1px solid #dddddd', paddingTop: '10px' }}>\r\n                {`${index + 1}`}\r\n            </div>\r\n            <div style={{ paddingLeft: '5px', paddingTop: '10px' }}>\r\n                <b>{item.username}</b>\r\n            </div>\r\n            <div style={{ flexGrow: 1, borderRight: '1px solid #dddddd' }}></div>\r\n            <div style={{ width: '2em', paddingTop: '10px' }}>\r\n                {`${item.trophy || 0}`}\r\n            </div>\r\n            <div style={{ paddingTop: '10px' }}>\r\n                🏆\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default function RankingBoard(props) {\r\n    function getList() {\r\n        const list = props.rankingBoard;\r\n        if (!list.length)\r\n            return;\r\n        const arr = [(\r\n            <div key={-1}\r\n                style={{\r\n                    textAlign: 'center',\r\n                    fontWeight: 'bold',\r\n                    fontSize: '1.2em',\r\n                    borderBottom: '1px solid #dddddd'\r\n                }}\r\n            >TOP 10 PLAYERS</div>\r\n        )];\r\n        list.forEach((item, index) => {\r\n            arr.push(getRow(index, item));\r\n        });\r\n        return arr;\r\n    }\r\n\r\n    return (\r\n        <div className='ranking-board'>\r\n            {getList()}\r\n        </div>\r\n    );\r\n}",{"ruleId":"116","replacedBy":"117"},{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"124","line":1,"column":27,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},{"ruleId":"120","severity":1,"message":"125","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":13},{"ruleId":"126","severity":1,"message":"127","line":16,"column":8,"nodeType":"128","endLine":16,"endColumn":10,"suggestions":"129"},{"ruleId":"126","severity":1,"message":"130","line":47,"column":15,"nodeType":"131","endLine":57,"endColumn":6},{"ruleId":"126","severity":1,"message":"132","line":57,"column":8,"nodeType":"128","endLine":57,"endColumn":10,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"134","line":43,"column":8,"nodeType":"128","endLine":43,"endColumn":10,"suggestions":"135"},{"ruleId":"136","severity":1,"message":"137","line":58,"column":34,"nodeType":"138","messageId":"139","endLine":58,"endColumn":36},{"ruleId":"120","severity":1,"message":"140","line":7,"column":22,"nodeType":"122","messageId":"123","endLine":7,"endColumn":26},{"ruleId":"126","severity":1,"message":"132","line":121,"column":8,"nodeType":"128","endLine":121,"endColumn":10,"suggestions":"141"},{"ruleId":"136","severity":1,"message":"137","line":128,"column":26,"nodeType":"138","messageId":"139","endLine":128,"endColumn":28},{"ruleId":"136","severity":1,"message":"137","line":138,"column":47,"nodeType":"138","messageId":"139","endLine":138,"endColumn":49},{"ruleId":"136","severity":1,"message":"137","line":256,"column":39,"nodeType":"138","messageId":"139","endLine":256,"endColumn":41},{"ruleId":"136","severity":1,"message":"142","line":288,"column":22,"nodeType":"138","messageId":"139","endLine":288,"endColumn":24},{"ruleId":"120","severity":1,"message":"143","line":11,"column":7,"nodeType":"122","messageId":"123","endLine":11,"endColumn":16},{"ruleId":"136","severity":1,"message":"142","line":66,"column":39,"nodeType":"138","messageId":"139","endLine":66,"endColumn":41},{"ruleId":"136","severity":1,"message":"137","line":79,"column":40,"nodeType":"138","messageId":"139","endLine":79,"endColumn":42},{"ruleId":"136","severity":1,"message":"137","line":79,"column":69,"nodeType":"138","messageId":"139","endLine":79,"endColumn":71},{"ruleId":"126","severity":1,"message":"144","line":88,"column":8,"nodeType":"128","endLine":88,"endColumn":10,"suggestions":"145"},{"ruleId":"136","severity":1,"message":"142","line":107,"column":28,"nodeType":"138","messageId":"139","endLine":107,"endColumn":30},{"ruleId":"136","severity":1,"message":"137","line":114,"column":65,"nodeType":"138","messageId":"139","endLine":114,"endColumn":67},{"ruleId":"136","severity":1,"message":"137","line":125,"column":38,"nodeType":"138","messageId":"139","endLine":125,"endColumn":40},{"ruleId":"136","severity":1,"message":"137","line":125,"column":69,"nodeType":"138","messageId":"139","endLine":125,"endColumn":71},{"ruleId":"126","severity":1,"message":"132","line":48,"column":8,"nodeType":"128","endLine":48,"endColumn":10,"suggestions":"146"},{"ruleId":"120","severity":1,"message":"124","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"136","severity":1,"message":"137","line":14,"column":29,"nodeType":"138","messageId":"139","endLine":14,"endColumn":31},{"ruleId":"136","severity":1,"message":"137","line":36,"column":63,"nodeType":"138","messageId":"139","endLine":36,"endColumn":65},{"ruleId":"136","severity":1,"message":"137","line":36,"column":99,"nodeType":"138","messageId":"139","endLine":36,"endColumn":101},{"ruleId":"136","severity":1,"message":"137","line":74,"column":46,"nodeType":"138","messageId":"139","endLine":74,"endColumn":48},{"ruleId":"136","severity":1,"message":"137","line":6,"column":32,"nodeType":"138","messageId":"139","endLine":6,"endColumn":34},{"ruleId":"136","severity":1,"message":"137","line":6,"column":67,"nodeType":"138","messageId":"139","endLine":6,"endColumn":69},{"ruleId":"136","severity":1,"message":"137","line":8,"column":48,"nodeType":"138","messageId":"139","endLine":8,"endColumn":50},{"ruleId":"136","severity":1,"message":"137","line":9,"column":48,"nodeType":"138","messageId":"139","endLine":9,"endColumn":50},{"ruleId":"120","severity":1,"message":"124","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":26},{"ruleId":"120","severity":1,"message":"121","line":1,"column":28,"nodeType":"122","messageId":"123","endLine":1,"endColumn":36},"no-native-reassign",["147"],"no-negated-in-lhs",["148"],"no-unused-vars","'useState' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","'React' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'history', 'props', 'token', and 'username'. Either include them or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.","ArrayExpression",["149"],"Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.",["150"],"React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["151"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'Link' is defined but never used.",["152"],"Expected '!==' and instead saw '!='.","'useStyles' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'boardId' and 'history'. Either include them or remove the dependency array.",["153"],["154"],"no-global-assign","no-unsafe-negation",{"desc":"155","fix":"156"},{"desc":"157","fix":"158"},{"desc":"159","fix":"160"},{"desc":"157","fix":"161"},{"desc":"162","fix":"163"},{"desc":"157","fix":"164"},"Update the dependencies array to be: [history, props, token, username]",{"range":"165","text":"166"},"Update the dependencies array to be: [history]",{"range":"167","text":"168"},"Update the dependencies array to be: [history, token]",{"range":"169","text":"170"},{"range":"171","text":"168"},"Update the dependencies array to be: [boardId, history]",{"range":"172","text":"173"},{"range":"174","text":"168"},[573,575],"[history, props, token, username]",[1700,1702],"[history]",[1365,1367],"[history, token]",[3753,3755],[3256,3258],"[boardId, history]",[1510,1512]]