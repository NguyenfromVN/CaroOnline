[{"D:\\CaroOnline\\src\\front-end\\src\\index.js":"1","D:\\CaroOnline\\src\\front-end\\src\\App.js":"2","D:\\CaroOnline\\src\\front-end\\src\\components\\demoRealtime.js":"3","D:\\CaroOnline\\src\\front-end\\src\\components\\Login\\index.js":"4","D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\index.js":"5","D:\\CaroOnline\\src\\front-end\\src\\components\\Register\\index.js":"6","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\index.js":"7","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\square.js":"8","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\chat.js":"9","D:\\CaroOnline\\src\\front-end\\src\\api\\userApi.js":"10","D:\\CaroOnline\\src\\front-end\\src\\api\\axiosClient.js":"11","D:\\CaroOnline\\src\\front-end\\src\\webSocketClient.js":"12","D:\\CaroOnline\\src\\front-end\\src\\components\\CheckMail\\index.js":"13","D:\\CaroOnline\\src\\front-end\\src\\components\\MailValidate\\index.js":"14"},{"size":256,"mtime":1608290034436,"results":"15","hashOfConfig":"16"},{"size":7028,"mtime":1608375556328,"results":"17","hashOfConfig":"16"},{"size":2850,"mtime":1607523969386,"results":"18","hashOfConfig":"16"},{"size":4002,"mtime":1608282954490,"results":"19","hashOfConfig":"16"},{"size":6958,"mtime":1608282954472,"results":"20","hashOfConfig":"16"},{"size":3968,"mtime":1608282954511,"results":"21","hashOfConfig":"16"},{"size":4132,"mtime":1608372497741,"results":"22","hashOfConfig":"16"},{"size":302,"mtime":1608282954454,"results":"23","hashOfConfig":"16"},{"size":2610,"mtime":1608297843428,"results":"24","hashOfConfig":"16"},{"size":1777,"mtime":1608282954385,"results":"25","hashOfConfig":"16"},{"size":1023,"mtime":1608282954373,"results":"26","hashOfConfig":"16"},{"size":1285,"mtime":1608297276036,"results":"27","hashOfConfig":"16"},{"size":765,"mtime":1608374402715,"results":"28","hashOfConfig":"16"},{"size":1532,"mtime":1608379701656,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"112nzf5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"32"},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53","usedDeprecatedRules":"32"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"D:\\CaroOnline\\src\\front-end\\src\\index.js",[],["65","66"],"D:\\CaroOnline\\src\\front-end\\src\\App.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\demoRealtime.js",["67","68"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// WEBSOCKET CLIENT SIDE\r\nconst ws = (() => {\r\n    // private\r\n    // singleton instance\r\n    let ws = undefined;\r\n    let lazyUpdate = {};\r\n\r\n    // public\r\n    function createConnection(userId, callback) {\r\n        destroyConnection();\r\n        ws = new WebSocket(\"ws://localhost:3001?userId=\" + userId);\r\n        ws.addEventListener(\"message\", ({ data: message }) => {\r\n            let topicName = message.split(\">>>\")[0];\r\n            if (lazyUpdate[topicName] > 0)\r\n                lazyUpdate[topicName] -= 1;\r\n            else\r\n                callback();\r\n        });\r\n    }\r\n\r\n    function destroyConnection() {\r\n        if (ws)\r\n            ws.close();\r\n        ws = undefined;\r\n    }\r\n\r\n    function notifyChange(topicName) {\r\n        ws.send(`${topicName}>>>changed`);\r\n        lazyUpdate[topicName] = (lazyUpdate[topicName] | 0) + 1;\r\n    }\r\n\r\n    return {\r\n        createConnection,\r\n        destroyConnection,\r\n        notifyChange\r\n    }\r\n})();\r\n\r\n// API\r\nasync function getActiveUsers() {\r\n    let response = await fetch('http://localhost:3001/active-users');\r\n    response = await response.json();\r\n    return response;\r\n}\r\n\r\n// HELPERS\r\nfunction refreshConnection(e, userId, setActiveUsers) {\r\n    if (e.charCode != 13)\r\n        return;\r\n    // when user press enter\r\n    // renew connection with new userId\r\n    ws.createConnection(userId,async ()=>{\r\n        // load list of active users\r\n        let activeUsers = await getActiveUsers();\r\n        setActiveUsers(activeUsers);\r\n    });\r\n}\r\n\r\nexport default function DemoRealtime(props) {\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [userId, setUserId] = useState('');\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n         \r\n        // if the user is not authorized, redirect to login page\r\n        if (!token) { // TODO\r\n            history.push('/signin');\r\n            return;\r\n        }\r\n\r\n        (async () => {\r\n            // load list of active users\r\n            let activeUsers = await getActiveUsers();\r\n            setActiveUsers(activeUsers);\r\n        })();\r\n    }, []);\r\n\r\n    let listItems=[];\r\n    for (let userId in activeUsers) {\r\n        listItems.push(\r\n            <li key={userId}>\r\n                {userId}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>User id:</p>\r\n            <input\r\n                type=\"text\"\r\n                onChange={e => setUserId(e.target.value)}\r\n                onKeyPress={e => refreshConnection(e, userId, setActiveUsers)}\r\n            ></input>\r\n            <hr/>\r\n            <p>Active users:</p>\r\n            <ul>\r\n                {listItems}\r\n            </ul>\r\n        </div>\r\n    );\r\n}",["69","70"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Login\\index.js",["71"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Avatar, Button, CssBaseline, TextField, Typography, makeStyles, Container } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport axios from 'axios';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Login(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const token = localStorage.getItem(\"token\");\n    const handleChangeLoginStatus = props.handleChangeLoginStatus;\n\n    useEffect(() => {\n        if (token) { // TODO\n            history.push('/');\n        }\n    }, [])\n\n    const handleUsernameChange = (e) => {\n        setUsername(e.target.value);\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        try {\n            await axios.post('http://localhost:3001/login', {\n                username: username,\n                password: password\n            }).then(function (response) {\n                if (response.status === 200) {\n                    const data = response.data;\n                    localStorage.setItem(\"token\", data.token);\n                    localStorage.setItem(\"username\", data.user.username)\n                    handleChangeLoginStatus();\n                    alert('Successfully loged in. Welcome to Home!');\n                    history.push('/');\n                }\n            })\n        } catch (error) {\n            alert('Username or password is not correct. Please try again!');\n            history.push('/signin');\n            console.log('Failed to fetch product list: ', error);\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form method=\"POST\" className={classes.form} onSubmit={handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"userName\"\n                        label=\"Username\"\n                        name=\"username\"\n                        onChange={handleUsernameChange}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        onChange={handlePasswordChange}\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\index.js",["72","73","74","75","76","77"],"import React, { useEffect, useState } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport api from '../../api/userApi';\nimport {\n    Grid, Container, Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle,\n    Card, CardActionArea, CardActions, CardContent, Typography\n} from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n    icon: {\n        marginRight: theme.spacing(2),\n    },\n    heroContent: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(8, 0, 6),\n    },\n    heroButtons: {\n        marginTop: theme.spacing(4),\n    },\n    cardGrid: {\n        paddingTop: theme.spacing(8),\n        paddingBottom: theme.spacing(8),\n    },\n    card: {\n        height: '100%',\n        display: 'flex',\n        flexDirection: 'column',\n    },\n    cardMedia: {\n        paddingTop: '56.25%', // 16:9\n    },\n    cardContent: {\n        flexGrow: 1,\n    },\n    footer: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(6),\n    },\n}));\n\n// const cards = [1, 2, 3, 4, 5, 6, 7, 8, 9];\n/* const boards = [\n    {\n        id: 1,\n        board: {\n            boardName: \"demo1\",\n            user: \"Phat Wang\"\n        }\n    },\n    {\n        id: 2,\n        board: {\n            boardName: \"demo2\",\n            user: \"Nguyen Nguyen\"\n        }\n    },\n    {\n        id: 3,\n        board: {\n            boardName: \"demo3\",\n            user: \"Phan Huy\"\n        }\n    },\n    {\n        id: 4,\n        board: {\n            boardName: \"demo4\",\n            user: \"Phat Wang\"\n        }\n    },\n] */\n\nconst boardsList = boards => (\n    boards.map((board) => {\n        // if (error) {\n        //     return <div>Error: {error.message}</div>;\n        // } else if (loading) {\n        //     return <div>Loading...</div>;\n        // } else {\n        return (\n            <BoardItem key={board.boardId}\n                boardItem={board} />\n        );\n        // }\n    })\n);\n\nexport default function Home() {\n    const classes = useStyles();\n    const [boards, setBoards] = useState([]);\n    const history = useHistory();\n\n    useEffect(() => {\n        (async () => {\n            // call API and get boards\n            let response = await api.getAllBoards();\n            if (response.message == 'Unauthorized') {\n                history.push('/signin');\n                return;\n            }\n            setBoards(response);\n        })();\n    }, []);\n\n    return (\n        <main>\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <Grid container spacing={4}>\n                    <Grid item xs={12} sm={4} md={4}>\n                        <AddBoardDialog callback={setBoards}/>\n                    </Grid>\n                </Grid>\n            </Container>\n            <Container className={classes.cardGrid} maxWidth=\"md\">\n                <Grid container spacing={4}>\n                    {boardsList(boards)}\n                </Grid>\n            </Container>\n        </main>\n    );\n}\n\nfunction BoardItem(props) {\n    const classes = useStyles();\n    const board = props.boardItem;\n    const history = useHistory();\n\n    async function joinGame() {\n        if (!board.userId1 || !board.userId2) {\n            // join game\n            if (board.userId1 != localStorage.getItem('username') && board.userId2 != localStorage.getItem('username'))\n                await api.joinBoard(board.boardId);\n        } else if (board.userId1 && board.userId2)\n            if (board.userId1 != localStorage.getItem('username') && board.userId2 != localStorage.getItem('username'))\n                return;\n        history.push(`/board?id=${board.boardId}`);\n    }\n\n    return (\n        <Grid item xs={12} sm={6} md={4}>\n            <Card variant=\"outlined\" className={classes.card}>\n                {/* <Link style={{ textDecoration: 'none', color: 'black' }} to={`/boards/${board.id}`}> */}\n                <CardActionArea>\n                    <CardContent className={classes.cardContent}>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {board.name}\n                        </Typography>\n                        <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                            {board.boardId}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {board.userId1}\n                        </Typography>\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                            {board.userId2}\n                        </Typography>\n                    </CardContent>\n                </CardActionArea>\n                {/* </Link> */}\n                <CardActions >\n                    <Button variant=\"outlined\" color=\"primary\" onClick={joinGame}>\n                        JOIN GAME\n                </Button>\n                </CardActions>\n            </Card>\n        </Grid>\n    );\n}\n\nfunction AddBoardDialog(props) {\n    const [open, setOpen] = React.useState(false);\n    const [nameText, setNameText] = React.useState('');\n\n    const handleClickOpen = () => {\n        setOpen(true);\n    };\n\n    const handleClose = () => {\n        setOpen(false);\n        setNameText('');\n    };\n\n    const handleNameChange = (e) => {\n        setNameText(e.target.value);\n    };\n\n    async function createNewBoard(e) {\n        handleClose();\n        await api.createBoard(nameText,nameText);\n        let boards = await api.getAllBoards();\n        props.callback(boards);\n    }\n\n    return (\n        <div>\n            <Button variant=\"outlined\" color=\"primary\" onClick={handleClickOpen}>\n                New game\n            </Button>\n            <Dialog open={open} onClose={handleClose} aria-labelledby=\"form-dialog-title\">\n                <DialogTitle id=\"form-dialog-title\">Create game</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        To create a new game, please fill out board's name in the box.\n                    </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Name\"\n                        variant=\"outlined\"\n                        fullWidth\n                        onChange={handleNameChange}\n                    />\n                    <DialogActions>\n                        <Button onClick={handleClose} color=\"primary\">\n                            Cancel\n                            </Button>\n                        <Button type=\"submit\" color=\"primary\" onClick={createNewBoard}>\n                            Create\n                            </Button>\n                    </DialogActions>\n                </DialogContent>\n            </Dialog>\n        </div>\n    );\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\Register\\index.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\index.js",["78","79","80"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\square.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\chat.js",["81","82"],"import React, { useEffect, useState } from 'react';\nimport api from '../../api/userApi';\nimport './index.css';\nimport ws from '../../webSocketClient';\n\nconst Chat = (props) => {\n    const [msg,setMsg]=useState(\"\");\n\n    function getListChat(){\n        let chat=props.chat;\n        let jsx=[];\n        let username=localStorage.getItem('username');\n        for (let i=0; i<chat.length; i++){\n            if (chat[i].from==username){\n                jsx.push(\n                    <div key={chat[i].time} className='message-tag-right'>\n                        <div></div>\n                        <div \n                            style={{\n                                backgroundColor: \"#cccccc\", \n                                borderRadius: \"5px\",\n                                margin: \"10px\",\n                                boxSizing: \"border-box\",\n                                textAlign: \"left\",\n                                padding: \"10px\"\n                            }}>\n                            {chat[i].content}\n                        </div>\n                    </div>\n                );\n            } else {\n                jsx.push(\n                    <div key={chat[i].time} className='message-tag-left'>\n                        <div\n                            style={{\n                                backgroundColor: \"#cccccc\", \n                                borderRadius: \"5px\",\n                                margin: \"10px\",\n                                boxSizing: \"border-box\",\n                                textAlign: \"left\",\n                                padding: \"10px\"\n                            }}\n                        >\n                            {chat[i].content}\n                        </div>\n                    </div>\n                );\n            }\n        }\n        return jsx;\n    }   \n    \n    let listChat=getListChat();\n\n    async function sendMessage(){\n        await api.makeMessage(props.boardId,new Date().getTime(),msg); \n        ws.notifyChange(props.topicName);\n    }\n\n    return (\n        <div className='chat-frame'>\n            <div className=\"list-chat\" id='listChat'>\n                {listChat}\n            </div>\n            <div className='text-box'>\n                <input \n                    className='message-text-box' \n                    onChange={(e)=>{\n                        setMsg(e.target.value);\n                    }}\n                    type='text'\n                />\n                <button className='send-button' onClick={sendMessage}>SEND</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;","D:\\CaroOnline\\src\\front-end\\src\\api\\userApi.js",["83"],"import axiosClient from \"./axiosClient\";\n\nconst userApi = {\n    login: (username, password) => {\n        const url = '/login';\n        axiosClient.post(url, {\n            username: username,\n            password: password\n        })\n            .then(function (response) {\n                // console.log(response);\n            })\n    },\n    getAllBoards: async ()=>{\n        const url = '/board/get_all_boards';\n        const response = await axiosClient.get(url);\n        return response;\n    },\n    getBoard: async function(boardId){\n        let boards=await this.getAllBoards();\n        for (let i=0; i<boards.length; i++){\n            if (boards[i].boardId==boardId)\n                return boards[i];\n        }\n    },\n    takeTurn: async function(boardId, row, col){\n        const url = `/board/make_turn?boardId=${boardId}&row=${row}&col=${col}`;\n        const response = await axiosClient.get(url);\n        return response;\n    },\n    joinBoard: async function(boardId){\n        const url = '/board/join_board?boardId='+boardId;\n        const response = await axiosClient.get(url);\n        return response;\n    },\n    createBoard: async function(boardId,name){\n        const url = '/board/create_board?boardId='+boardId+'&name='+name;\n        const response = await axiosClient.get(url);\n        return response;\n    },\n    getBoardChat: async function(boardId){\n        const url = '/board/get_board_chat?boardId='+boardId;\n        const response = await axiosClient.get(url);\n        return response;\n    },\n    makeMessage: async function(boardId, time, content){\n        const url = '/board/make_message?boardId='+boardId+'&time='+time+'&content='+content;\n        const response = await axiosClient.get(url);\n        return response;\n    }\n}\n\nexport default userApi;","D:\\CaroOnline\\src\\front-end\\src\\api\\axiosClient.js",[],"D:\\CaroOnline\\src\\front-end\\src\\webSocketClient.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\CheckMail\\index.js",["84","85"],"D:\\CaroOnline\\src\\front-end\\src\\components\\MailValidate\\index.js",["86","87","88"],{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":51,"column":20,"nodeType":"95","messageId":"96","endLine":51,"endColumn":22},{"ruleId":"97","severity":1,"message":"98","line":81,"column":8,"nodeType":"99","endLine":81,"endColumn":10,"suggestions":"100"},{"ruleId":"89","replacedBy":"101"},{"ruleId":"91","replacedBy":"102"},{"ruleId":"97","severity":1,"message":"103","line":40,"column":8,"nodeType":"99","endLine":40,"endColumn":10,"suggestions":"104"},{"ruleId":"93","severity":1,"message":"105","line":98,"column":34,"nodeType":"95","messageId":"96","endLine":98,"endColumn":36},{"ruleId":"97","severity":1,"message":"98","line":104,"column":8,"nodeType":"99","endLine":104,"endColumn":10,"suggestions":"106"},{"ruleId":"93","severity":1,"message":"94","line":132,"column":31,"nodeType":"95","messageId":"96","endLine":132,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":132,"column":84,"nodeType":"95","messageId":"96","endLine":132,"endColumn":86},{"ruleId":"93","severity":1,"message":"94","line":135,"column":31,"nodeType":"95","messageId":"96","endLine":135,"endColumn":33},{"ruleId":"93","severity":1,"message":"94","line":135,"column":84,"nodeType":"95","messageId":"96","endLine":135,"endColumn":86},{"ruleId":"107","severity":1,"message":"108","line":52,"column":11,"nodeType":"109","messageId":"110","endLine":52,"endColumn":18},{"ruleId":"93","severity":1,"message":"105","line":58,"column":31,"nodeType":"95","messageId":"96","endLine":58,"endColumn":33},{"ruleId":"97","severity":1,"message":"111","line":90,"column":8,"nodeType":"99","endLine":90,"endColumn":10,"suggestions":"112"},{"ruleId":"107","severity":1,"message":"113","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":26},{"ruleId":"93","severity":1,"message":"105","line":14,"column":29,"nodeType":"95","messageId":"96","endLine":14,"endColumn":31},{"ruleId":"93","severity":1,"message":"105","line":22,"column":34,"nodeType":"95","messageId":"96","endLine":22,"endColumn":36},{"ruleId":"107","severity":1,"message":"114","line":1,"column":17,"nodeType":"109","messageId":"110","endLine":1,"endColumn":25},{"ruleId":"107","severity":1,"message":"113","line":1,"column":27,"nodeType":"109","messageId":"110","endLine":1,"endColumn":36},{"ruleId":"107","severity":1,"message":"115","line":4,"column":8,"nodeType":"109","messageId":"110","endLine":4,"endColumn":11},{"ruleId":"107","severity":1,"message":"116","line":41,"column":13,"nodeType":"109","messageId":"110","endLine":41,"endColumn":21},{"ruleId":"97","severity":1,"message":"98","line":45,"column":7,"nodeType":"99","endLine":45,"endColumn":9,"suggestions":"117"},"no-native-reassign",["118"],"no-negated-in-lhs",["119"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["120"],["118"],["119"],"React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["121"],"Expected '===' and instead saw '=='.",["122"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'boardId' and 'history'. Either include them or remove the dependency array.",["123"],"'useEffect' is defined but never used.","'useState' is defined but never used.","'api' is defined but never used.","'username' is assigned a value but never used.",["124"],"no-global-assign","no-unsafe-negation",{"desc":"125","fix":"126"},{"desc":"127","fix":"128"},{"desc":"125","fix":"129"},{"desc":"130","fix":"131"},{"desc":"125","fix":"132"},"Update the dependencies array to be: [history]",{"range":"133","text":"134"},"Update the dependencies array to be: [history, token]",{"range":"135","text":"136"},{"range":"137","text":"134"},"Update the dependencies array to be: [boardId, history]",{"range":"138","text":"139"},{"range":"140","text":"134"},[2245,2247],"[history]",[1189,1191],"[history, token]",[2505,2507],[2758,2760],"[boardId, history]",[1224,1226]]