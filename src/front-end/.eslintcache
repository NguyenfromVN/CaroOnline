[{"D:\\CaroOnline\\src\\front-end\\src\\index.js":"1","D:\\CaroOnline\\src\\front-end\\src\\App.js":"2","D:\\CaroOnline\\src\\front-end\\src\\components\\demoRealtime.js":"3","D:\\CaroOnline\\src\\front-end\\src\\components\\Login\\index.js":"4","D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\index.js":"5","D:\\CaroOnline\\src\\front-end\\src\\components\\Register\\index.js":"6","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\index.js":"7","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\square.js":"8","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\chat.js":"9","D:\\CaroOnline\\src\\front-end\\src\\api\\userApi.js":"10","D:\\CaroOnline\\src\\front-end\\src\\api\\axiosClient.js":"11"},{"size":238,"mtime":1607441040231,"results":"12","hashOfConfig":"13"},{"size":6911,"mtime":1608068515992,"results":"14","hashOfConfig":"13"},{"size":2850,"mtime":1607523969386,"results":"15","hashOfConfig":"13"},{"size":4122,"mtime":1608067786519,"results":"16","hashOfConfig":"13"},{"size":7184,"mtime":1608114672689,"results":"17","hashOfConfig":"13"},{"size":4074,"mtime":1608067786528,"results":"18","hashOfConfig":"13"},{"size":2773,"mtime":1608126538195,"results":"19","hashOfConfig":"13"},{"size":314,"mtime":1608067786499,"results":"20","hashOfConfig":"13"},{"size":2802,"mtime":1608130204982,"results":"21","hashOfConfig":"13"},{"size":1829,"mtime":1608130093071,"results":"22","hashOfConfig":"13"},{"size":1061,"mtime":1608071300301,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"26"},"112nzf5",{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"31","usedDeprecatedRules":"26"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"34","usedDeprecatedRules":"26"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"37","messages":"38","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"D:\\CaroOnline\\src\\front-end\\src\\index.js",[],["49","50"],"D:\\CaroOnline\\src\\front-end\\src\\App.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\demoRealtime.js",["51","52"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// WEBSOCKET CLIENT SIDE\r\nconst ws = (() => {\r\n    // private\r\n    // singleton instance\r\n    let ws = undefined;\r\n    let lazyUpdate = {};\r\n\r\n    // public\r\n    function createConnection(userId, callback) {\r\n        destroyConnection();\r\n        ws = new WebSocket(\"ws://localhost:3001?userId=\" + userId);\r\n        ws.addEventListener(\"message\", ({ data: message }) => {\r\n            let topicName = message.split(\">>>\")[0];\r\n            if (lazyUpdate[topicName] > 0)\r\n                lazyUpdate[topicName] -= 1;\r\n            else\r\n                callback();\r\n        });\r\n    }\r\n\r\n    function destroyConnection() {\r\n        if (ws)\r\n            ws.close();\r\n        ws = undefined;\r\n    }\r\n\r\n    function notifyChange(topicName) {\r\n        ws.send(`${topicName}>>>changed`);\r\n        lazyUpdate[topicName] = (lazyUpdate[topicName] | 0) + 1;\r\n    }\r\n\r\n    return {\r\n        createConnection,\r\n        destroyConnection,\r\n        notifyChange\r\n    }\r\n})();\r\n\r\n// API\r\nasync function getActiveUsers() {\r\n    let response = await fetch('http://localhost:3001/active-users');\r\n    response = await response.json();\r\n    return response;\r\n}\r\n\r\n// HELPERS\r\nfunction refreshConnection(e, userId, setActiveUsers) {\r\n    if (e.charCode != 13)\r\n        return;\r\n    // when user press enter\r\n    // renew connection with new userId\r\n    ws.createConnection(userId,async ()=>{\r\n        // load list of active users\r\n        let activeUsers = await getActiveUsers();\r\n        setActiveUsers(activeUsers);\r\n    });\r\n}\r\n\r\nexport default function DemoRealtime(props) {\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [userId, setUserId] = useState('');\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n         \r\n        // if the user is not authorized, redirect to login page\r\n        if (!token) { // TODO\r\n            history.push('/signin');\r\n            return;\r\n        }\r\n\r\n        (async () => {\r\n            // load list of active users\r\n            let activeUsers = await getActiveUsers();\r\n            setActiveUsers(activeUsers);\r\n        })();\r\n    }, []);\r\n\r\n    let listItems=[];\r\n    for (let userId in activeUsers) {\r\n        listItems.push(\r\n            <li key={userId}>\r\n                {userId}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>User id:</p>\r\n            <input\r\n                type=\"text\"\r\n                onChange={e => setUserId(e.target.value)}\r\n                onKeyPress={e => refreshConnection(e, userId, setActiveUsers)}\r\n            ></input>\r\n            <hr/>\r\n            <p>Active users:</p>\r\n            <ul>\r\n                {listItems}\r\n            </ul>\r\n        </div>\r\n    );\r\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\Login\\index.js",["53"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport { Avatar, Button, CssBaseline, TextField, Typography, makeStyles, Container } from '@material-ui/core';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport axios from 'axios';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(1),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function Login(props) {\r\n    const classes = useStyles();\r\n\r\n    const [username, setUsername] = useState('');\r\n    const [password, setPassword] = useState('');\r\n    const token = localStorage.getItem(\"token\");\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        if (token) { // TODO\r\n            history.push('/');\r\n        }\r\n    }, [])\r\n\r\n    const handleUsernameChange = (e) => {\r\n        setUsername(e.target.value);\r\n    }\r\n\r\n    const handlePasswordChange = (e) => {\r\n        setPassword(e.target.value);\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault();\r\n\r\n        try {\r\n            await axios.post('http://localhost:3001/login', {\r\n                username: username,\r\n                password: password\r\n            }).then(function (response) {\r\n                if (response.status === 200) {\r\n                    const data = response.data;\r\n                    localStorage.setItem(\"token\", data.token);\r\n                    console.log(localStorage.getItem(\"token\"));\r\n                    alert('Successfully loged in. Welcome to Home!');\r\n                    history.push('/');\r\n                }\r\n            })\r\n        } catch (error) {\r\n            alert('Username or password is not correct. Please try again!');\r\n            history.push('/signin');\r\n            console.log('Failed to fetch product list: ', error);\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Sign in\r\n                </Typography>\r\n                <form method=\"POST\" className={classes.form} onSubmit={handleSubmit}>\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        id=\"userName\"\r\n                        label=\"Username\"\r\n                        name=\"username\"\r\n                        onChange={handleUsernameChange}\r\n                        autoFocus\r\n                    />\r\n                    <TextField\r\n                        variant=\"outlined\"\r\n                        margin=\"normal\"\r\n                        required\r\n                        fullWidth\r\n                        name=\"password\"\r\n                        label=\"Password\"\r\n                        type=\"password\"\r\n                        id=\"password\"\r\n                        onChange={handlePasswordChange}\r\n                        autoComplete=\"current-password\"\r\n                    />\r\n                    <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Sign In\r\n                    </Button>\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\index.js",["54","55","56","57","58","59"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Register\\index.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\index.js",["60","61","62"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\square.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\chat.js",["63","64"],"D:\\CaroOnline\\src\\front-end\\src\\api\\userApi.js",["65"],"D:\\CaroOnline\\src\\front-end\\src\\api\\axiosClient.js",[],{"ruleId":"66","replacedBy":"67"},{"ruleId":"68","replacedBy":"69"},{"ruleId":"70","severity":1,"message":"71","line":51,"column":20,"nodeType":"72","messageId":"73","endLine":51,"endColumn":22},{"ruleId":"74","severity":1,"message":"75","line":81,"column":8,"nodeType":"76","endLine":81,"endColumn":10,"suggestions":"77"},{"ruleId":"74","severity":1,"message":"78","line":39,"column":8,"nodeType":"76","endLine":39,"endColumn":10,"suggestions":"79"},{"ruleId":"70","severity":1,"message":"80","line":98,"column":34,"nodeType":"72","messageId":"73","endLine":98,"endColumn":36},{"ruleId":"74","severity":1,"message":"75","line":104,"column":8,"nodeType":"76","endLine":104,"endColumn":10,"suggestions":"81"},{"ruleId":"70","severity":1,"message":"71","line":132,"column":31,"nodeType":"72","messageId":"73","endLine":132,"endColumn":33},{"ruleId":"70","severity":1,"message":"71","line":132,"column":84,"nodeType":"72","messageId":"73","endLine":132,"endColumn":86},{"ruleId":"70","severity":1,"message":"71","line":135,"column":31,"nodeType":"72","messageId":"73","endLine":135,"endColumn":33},{"ruleId":"70","severity":1,"message":"71","line":135,"column":84,"nodeType":"72","messageId":"73","endLine":135,"endColumn":86},{"ruleId":"82","severity":1,"message":"83","line":50,"column":11,"nodeType":"84","messageId":"85","endLine":50,"endColumn":18},{"ruleId":"70","severity":1,"message":"80","line":56,"column":31,"nodeType":"72","messageId":"73","endLine":56,"endColumn":33},{"ruleId":"74","severity":1,"message":"86","line":62,"column":8,"nodeType":"76","endLine":62,"endColumn":10,"suggestions":"87"},{"ruleId":"74","severity":1,"message":"88","line":14,"column":7,"nodeType":"76","endLine":14,"endColumn":9,"suggestions":"89"},{"ruleId":"70","severity":1,"message":"80","line":22,"column":29,"nodeType":"72","messageId":"73","endLine":22,"endColumn":31},{"ruleId":"70","severity":1,"message":"80","line":22,"column":34,"nodeType":"72","messageId":"73","endLine":22,"endColumn":36},"no-native-reassign",["90"],"no-negated-in-lhs",["91"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["92"],"React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["93"],"Expected '===' and instead saw '=='.",["94"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'boardId' and 'history'. Either include them or remove the dependency array.",["95"],"React Hook useEffect has a missing dependency: 'getListChat'. Either include it or remove the dependency array.",["96"],"no-global-assign","no-unsafe-negation",{"desc":"97","fix":"98"},{"desc":"99","fix":"100"},{"desc":"97","fix":"101"},{"desc":"102","fix":"103"},{"desc":"104","fix":"105"},"Update the dependencies array to be: [history]",{"range":"106","text":"107"},"Update the dependencies array to be: [history, token]",{"range":"108","text":"109"},{"range":"110","text":"107"},"Update the dependencies array to be: [boardId, history]",{"range":"111","text":"112"},"Update the dependencies array to be: [getListChat]",{"range":"113","text":"114"},[2245,2247],"[history]",[1160,1162],"[history, token]",[2608,2610],[1676,1678],"[boardId, history]",[371,373],"[getListChat]"]