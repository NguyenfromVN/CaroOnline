[{"D:\\CaroOnline\\src\\front-end\\src\\index.js":"1","D:\\CaroOnline\\src\\front-end\\src\\App.js":"2","D:\\CaroOnline\\src\\front-end\\src\\components\\demoRealtime.js":"3","D:\\CaroOnline\\src\\front-end\\src\\components\\Login\\index.js":"4","D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\index.js":"5","D:\\CaroOnline\\src\\front-end\\src\\components\\Register\\index.js":"6","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\index.js":"7","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\square.js":"8","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\chat.js":"9","D:\\CaroOnline\\src\\front-end\\src\\api\\userApi.js":"10","D:\\CaroOnline\\src\\front-end\\src\\api\\axiosClient.js":"11","D:\\CaroOnline\\src\\front-end\\src\\webSocketClient.js":"12","D:\\CaroOnline\\src\\front-end\\src\\components\\CheckMail\\index.js":"13","D:\\CaroOnline\\src\\front-end\\src\\components\\MailValidate\\index.js":"14"},{"size":256,"mtime":1608290034436,"results":"15","hashOfConfig":"16"},{"size":7188,"mtime":1608394987024,"results":"17","hashOfConfig":"16"},{"size":2850,"mtime":1607523969386,"results":"18","hashOfConfig":"16"},{"size":3873,"mtime":1608398543785,"results":"19","hashOfConfig":"16"},{"size":9148,"mtime":1608815895054,"results":"20","hashOfConfig":"16"},{"size":4526,"mtime":1608394987040,"results":"21","hashOfConfig":"16"},{"size":3799,"mtime":1608812233278,"results":"22","hashOfConfig":"16"},{"size":302,"mtime":1608282954454,"results":"23","hashOfConfig":"16"},{"size":2898,"mtime":1608404973147,"results":"24","hashOfConfig":"16"},{"size":2754,"mtime":1608812162173,"results":"25","hashOfConfig":"16"},{"size":1023,"mtime":1608282954373,"results":"26","hashOfConfig":"16"},{"size":1285,"mtime":1608297276036,"results":"27","hashOfConfig":"16"},{"size":765,"mtime":1608374402715,"results":"28","hashOfConfig":"16"},{"size":2009,"mtime":1608450297084,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},"112nzf5",{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"38"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"41","usedDeprecatedRules":"32"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":7,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"52","usedDeprecatedRules":"32"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"32"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"32"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"32"},"D:\\CaroOnline\\src\\front-end\\src\\index.js",[],["65","66"],"D:\\CaroOnline\\src\\front-end\\src\\App.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\demoRealtime.js",["67","68"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// WEBSOCKET CLIENT SIDE\r\nconst ws = (() => {\r\n    // private\r\n    // singleton instance\r\n    let ws = undefined;\r\n    let lazyUpdate = {};\r\n\r\n    // public\r\n    function createConnection(userId, callback) {\r\n        destroyConnection();\r\n        ws = new WebSocket(\"ws://localhost:3001?userId=\" + userId);\r\n        ws.addEventListener(\"message\", ({ data: message }) => {\r\n            let topicName = message.split(\">>>\")[0];\r\n            if (lazyUpdate[topicName] > 0)\r\n                lazyUpdate[topicName] -= 1;\r\n            else\r\n                callback();\r\n        });\r\n    }\r\n\r\n    function destroyConnection() {\r\n        if (ws)\r\n            ws.close();\r\n        ws = undefined;\r\n    }\r\n\r\n    function notifyChange(topicName) {\r\n        ws.send(`${topicName}>>>changed`);\r\n        lazyUpdate[topicName] = (lazyUpdate[topicName] | 0) + 1;\r\n    }\r\n\r\n    return {\r\n        createConnection,\r\n        destroyConnection,\r\n        notifyChange\r\n    }\r\n})();\r\n\r\n// API\r\nasync function getActiveUsers() {\r\n    let response = await fetch('http://localhost:3001/active-users');\r\n    response = await response.json();\r\n    return response;\r\n}\r\n\r\n// HELPERS\r\nfunction refreshConnection(e, userId, setActiveUsers) {\r\n    if (e.charCode != 13)\r\n        return;\r\n    // when user press enter\r\n    // renew connection with new userId\r\n    ws.createConnection(userId,async ()=>{\r\n        // load list of active users\r\n        let activeUsers = await getActiveUsers();\r\n        setActiveUsers(activeUsers);\r\n    });\r\n}\r\n\r\nexport default function DemoRealtime(props) {\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [userId, setUserId] = useState('');\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n         \r\n        // if the user is not authorized, redirect to login page\r\n        if (!token) { // TODO\r\n            history.push('/signin');\r\n            return;\r\n        }\r\n\r\n        (async () => {\r\n            // load list of active users\r\n            let activeUsers = await getActiveUsers();\r\n            setActiveUsers(activeUsers);\r\n        })();\r\n    }, []);\r\n\r\n    let listItems=[];\r\n    for (let userId in activeUsers) {\r\n        listItems.push(\r\n            <li key={userId}>\r\n                {userId}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>User id:</p>\r\n            <input\r\n                type=\"text\"\r\n                onChange={e => setUserId(e.target.value)}\r\n                onKeyPress={e => refreshConnection(e, userId, setActiveUsers)}\r\n            ></input>\r\n            <hr/>\r\n            <p>Active users:</p>\r\n            <ul>\r\n                {listItems}\r\n            </ul>\r\n        </div>\r\n    );\r\n}",["69","70"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Login\\index.js",["71","72"],"import React, { useState, useEffect } from 'react';\nimport { useHistory } from 'react-router-dom';\nimport { Avatar, Button, CssBaseline, TextField, Typography, makeStyles, Container } from '@material-ui/core';\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\nimport api from '../../api/userApi';\n\nconst useStyles = makeStyles((theme) => ({\n    paper: {\n        marginTop: theme.spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: theme.spacing(1),\n        backgroundColor: theme.palette.secondary.main,\n    },\n    form: {\n        width: '100%', // Fix IE 11 issue.\n        marginTop: theme.spacing(1),\n    },\n    submit: {\n        margin: theme.spacing(3, 0, 2),\n    },\n}));\n\nexport default function Login(props) {\n    const classes = useStyles();\n    const history = useHistory();\n    const [username, setUsername] = useState('');\n    const [password, setPassword] = useState('');\n\n    const token = localStorage.getItem(\"token\");\n    const handleChangeLoginStatus = props.handleChangeLoginStatus;\n\n    useEffect(() => {\n        if (token) { // TODO\n            history.push('/');\n        }\n    }, [])\n\n    const handleUsernameChange = (e) => {\n        setUsername(e.target.value);\n    }\n\n    const handlePasswordChange = (e) => {\n        setPassword(e.target.value);\n    }\n\n    const handleSubmit = async (e) => {\n        e.preventDefault();\n\n        let response = await api.login(username, password);\n        if (response.message) {\n            if (response.message == 'Invalid') {\n                alert(\"Username or password is not correct. Please try again!\");\n            } else {\n                alert(\"Check out your email to validate this account!\");\n            }\n            history.push('/signin');\n        } else {\n            const data = response.data;\n            localStorage.setItem(\"token\", data.token);\n            localStorage.setItem(\"username\", data.user.username)\n            handleChangeLoginStatus();\n            alert('Successfully loged in. Welcome to Home!');\n            history.push('/');\n        }\n    }\n\n    return (\n        <Container component=\"main\" maxWidth=\"xs\">\n            <CssBaseline />\n            <div className={classes.paper}>\n                <Avatar className={classes.avatar}>\n                    <LockOutlinedIcon />\n                </Avatar>\n                <Typography component=\"h1\" variant=\"h5\">\n                    Sign in\n                </Typography>\n                <form method=\"POST\" className={classes.form} onSubmit={handleSubmit}>\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        id=\"userName\"\n                        label=\"Username\"\n                        name=\"username\"\n                        onChange={handleUsernameChange}\n                        autoFocus\n                    />\n                    <TextField\n                        variant=\"outlined\"\n                        margin=\"normal\"\n                        required\n                        fullWidth\n                        name=\"password\"\n                        label=\"Password\"\n                        type=\"password\"\n                        id=\"password\"\n                        onChange={handlePasswordChange}\n                        autoComplete=\"current-password\"\n                    />\n                    <Button\n                        type=\"submit\"\n                        fullWidth\n                        variant=\"contained\"\n                        color=\"primary\"\n                        className={classes.submit}\n                    >\n                        Sign In\n                    </Button>\n                </form>\n            </div>\n        </Container>\n    );\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\index.js",["73","74","75","76","77","78","79"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Register\\index.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\index.js",["80","81"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\square.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\chat.js",["82","83","84"],"import React, { useEffect, useState } from 'react';\nimport api from '../../api/userApi';\nimport './index.css';\nimport ws from '../../webSocketClient';\n\nconst Chat = (props) => {\n    const [msg,setMsg]=useState(\"\");\n\n    function getListChat(){\n        let chat=props.chat;\n        let jsx=[];\n        let username=localStorage.getItem('username');\n        for (let i=0; i<chat.length; i++){\n            if (chat[i].from==username){\n                jsx.push(\n                    <div key={chat[i].time} className='message-tag-right'>\n                        <div></div>\n                        <div \n                            style={{\n                                backgroundColor: \"#99eeee\", \n                                borderRadius: \"5px\",\n                                margin: \"10px\",\n                                boxSizing: \"border-box\",\n                                textAlign: \"left\",\n                                padding: \"10px\"\n                            }}>\n                            {chat[i].content}\n                        </div>\n                    </div>\n                );\n            } else {\n                jsx.push(\n                    <div key={chat[i].time} className='message-tag-left'>\n                        <div\n                            style={{\n                                backgroundColor: \"#cccccc\", \n                                borderRadius: \"5px\",\n                                margin: \"10px\",\n                                boxSizing: \"border-box\",\n                                textAlign: \"left\",\n                                padding: \"10px\"\n                            }}\n                        >\n                            {chat[i].content}\n                        </div>\n                    </div>\n                );\n            }\n        }\n        return jsx;\n    }   \n    \n    let listChat=getListChat();\n\n    async function sendMessage(){\n        await api.makeMessage(props.boardId,new Date().getTime(),msg); \n        ws.notifyChange(props.topicName);\n        setMsg('');\n    }\n\n    return (\n        <div className='chat-frame'>\n            <div className=\"list-chat\" id='listChat'>\n                {listChat}\n            </div>\n            <div className='text-box'>\n                <input \n                    className='message-text-box' \n                    onChange={(e)=>{\n                        setMsg(e.target.value);\n                    }}\n                    onKeyPress={(e)=>{\n                        if ((e.code || e.key)=='Enter'){\n                            // ENTER is pressed\n                            sendMessage();\n                        }\n                    }}\n                    type='text'\n                    value={msg}\n                />\n                <button className='send-button' onClick={sendMessage}>SEND</button>\n            </div>\n        </div>\n    );\n}\n\nexport default Chat;","D:\\CaroOnline\\src\\front-end\\src\\api\\userApi.js",["85"],"D:\\CaroOnline\\src\\front-end\\src\\api\\axiosClient.js",[],"D:\\CaroOnline\\src\\front-end\\src\\webSocketClient.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\CheckMail\\index.js",["86","87"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container:{\r\n        height: '500px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    notification:{\r\n        fontSize: '2.5vw',\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nexport default function CheckMail(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.notification}>\r\n                <b>Register completed!</b>\r\n                <br/>\r\n                One more step, check out your mail to finish the comfirmation!\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\MailValidate\\index.js",["88","89"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from '../../api/userApi';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: '500px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    notification: {\r\n        fontSize: '2.5vw',\r\n        textAlign: 'center'\r\n    },\r\n    loading: {\r\n        width: '1em',\r\n        height: '1em',\r\n        display: 'inline-block',\r\n        textAlign: 'left'\r\n    }\r\n}));\r\n\r\nlet createCallback=0;\r\nconst timeInterval=200;\r\n\r\nexport default function MailValidate(props) {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState('...');\r\n    const history = useHistory();\r\n\r\n    // update loading\r\n    let current=new Date().getTime();\r\n    // create only 1 callback at a time\r\n    if (current-createCallback>=timeInterval){\r\n        createCallback=current;\r\n        setTimeout(() => {\r\n            if (loading.length < 3) {\r\n                setLoading(loading + '.');\r\n            } else {\r\n                setLoading('');\r\n            }\r\n        }, timeInterval);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        // get username from url\r\n        let username = (new URL(document.location)).searchParams.get('username');\r\n        // call api for validation\r\n        await api.validate(username);\r\n        // delete all local storages on App\r\n        localStorage.setItem(\"username\", \"\");\r\n        localStorage.setItem(\"loginStatus\", \"false\");\r\n        localStorage.setItem(\"token\", \"\");\r\n        setTimeout(() => history.push('/signin'), 5000);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.notification}>\r\n                <b>Almost done!</b>\r\n                <br />\r\n                Wait for a moment <div className={classes.loading}>{loading}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}",{"ruleId":"90","replacedBy":"91"},{"ruleId":"92","replacedBy":"93"},{"ruleId":"94","severity":1,"message":"95","line":51,"column":20,"nodeType":"96","messageId":"97","endLine":51,"endColumn":22},{"ruleId":"98","severity":1,"message":"99","line":81,"column":8,"nodeType":"100","endLine":81,"endColumn":10,"suggestions":"101"},{"ruleId":"90","replacedBy":"102"},{"ruleId":"92","replacedBy":"103"},{"ruleId":"98","severity":1,"message":"104","line":40,"column":8,"nodeType":"100","endLine":40,"endColumn":10,"suggestions":"105"},{"ruleId":"94","severity":1,"message":"106","line":55,"column":34,"nodeType":"96","messageId":"97","endLine":55,"endColumn":36},{"ruleId":"107","severity":1,"message":"108","line":83,"column":25,"nodeType":"109","messageId":"110","endLine":98,"endColumn":26},{"ruleId":"98","severity":1,"message":"99","line":109,"column":8,"nodeType":"100","endLine":109,"endColumn":10,"suggestions":"111"},{"ruleId":"94","severity":1,"message":"95","line":144,"column":31,"nodeType":"96","messageId":"97","endLine":144,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":144,"column":84,"nodeType":"96","messageId":"97","endLine":144,"endColumn":86},{"ruleId":"94","severity":1,"message":"95","line":147,"column":31,"nodeType":"96","messageId":"97","endLine":147,"endColumn":33},{"ruleId":"94","severity":1,"message":"95","line":147,"column":84,"nodeType":"96","messageId":"97","endLine":147,"endColumn":86},{"ruleId":"94","severity":1,"message":"106","line":197,"column":38,"nodeType":"96","messageId":"97","endLine":197,"endColumn":40},{"ruleId":"112","severity":1,"message":"113","line":31,"column":11,"nodeType":"114","messageId":"115","endLine":31,"endColumn":18},{"ruleId":"98","severity":1,"message":"116","line":71,"column":8,"nodeType":"100","endLine":71,"endColumn":10,"suggestions":"117"},{"ruleId":"112","severity":1,"message":"118","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":26},{"ruleId":"94","severity":1,"message":"106","line":14,"column":29,"nodeType":"96","messageId":"97","endLine":14,"endColumn":31},{"ruleId":"94","severity":1,"message":"106","line":73,"column":46,"nodeType":"96","messageId":"97","endLine":73,"endColumn":48},{"ruleId":"94","severity":1,"message":"106","line":47,"column":35,"nodeType":"96","messageId":"97","endLine":47,"endColumn":37},{"ruleId":"112","severity":1,"message":"119","line":1,"column":17,"nodeType":"114","messageId":"115","endLine":1,"endColumn":25},{"ruleId":"112","severity":1,"message":"118","line":1,"column":27,"nodeType":"114","messageId":"115","endLine":1,"endColumn":36},{"ruleId":"98","severity":1,"message":"120","line":47,"column":15,"nodeType":"121","endLine":57,"endColumn":6},{"ruleId":"98","severity":1,"message":"99","line":57,"column":8,"nodeType":"100","endLine":57,"endColumn":10,"suggestions":"122"},"no-native-reassign",["123"],"no-negated-in-lhs",["124"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["125"],["123"],["124"],"React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["126"],"Expected '===' and instead saw '=='.","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["127"],"no-unused-vars","'classes' is assigned a value but never used.","Identifier","unusedVar","React Hook useEffect has missing dependencies: 'boardId' and 'history'. Either include them or remove the dependency array.",["128"],"'useEffect' is defined but never used.","'useState' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["129"],"no-global-assign","no-unsafe-negation",{"desc":"130","fix":"131"},{"desc":"132","fix":"133"},{"desc":"130","fix":"134"},{"desc":"135","fix":"136"},{"desc":"130","fix":"137"},"Update the dependencies array to be: [history]",{"range":"138","text":"139"},"Update the dependencies array to be: [history, token]",{"range":"140","text":"141"},{"range":"142","text":"139"},"Update the dependencies array to be: [boardId, history]",{"range":"143","text":"144"},{"range":"145","text":"139"},[2245,2247],"[history]",[1199,1201],"[history, token]",[3484,3486],[2379,2381],"[boardId, history]",[1700,1702]]