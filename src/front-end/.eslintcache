[{"D:\\CaroOnline\\src\\front-end\\src\\index.js":"1","D:\\CaroOnline\\src\\front-end\\src\\App.js":"2","D:\\CaroOnline\\src\\front-end\\src\\components\\demoRealtime.js":"3","D:\\CaroOnline\\src\\front-end\\src\\components\\Login\\index.js":"4","D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\index.js":"5","D:\\CaroOnline\\src\\front-end\\src\\components\\Register\\index.js":"6","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\index.js":"7","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\square.js":"8","D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\chat.js":"9","D:\\CaroOnline\\src\\front-end\\src\\api\\userApi.js":"10","D:\\CaroOnline\\src\\front-end\\src\\api\\axiosClient.js":"11","D:\\CaroOnline\\src\\front-end\\src\\webSocketClient.js":"12","D:\\CaroOnline\\src\\front-end\\src\\components\\CheckMail\\index.js":"13","D:\\CaroOnline\\src\\front-end\\src\\components\\MailValidate\\index.js":"14","D:\\CaroOnline\\src\\front-end\\src\\components\\Profile\\index.js":"15"},{"size":256,"mtime":1608290034436,"results":"16","hashOfConfig":"17"},{"size":7313,"mtime":1608905806732,"results":"18","hashOfConfig":"17"},{"size":2850,"mtime":1607523969386,"results":"19","hashOfConfig":"17"},{"size":4749,"mtime":1609159578986,"results":"20","hashOfConfig":"17"},{"size":10736,"mtime":1609162416419,"results":"21","hashOfConfig":"17"},{"size":4526,"mtime":1608394987040,"results":"22","hashOfConfig":"17"},{"size":4714,"mtime":1609172646678,"results":"23","hashOfConfig":"17"},{"size":302,"mtime":1608282954454,"results":"24","hashOfConfig":"17"},{"size":3078,"mtime":1609164745078,"results":"25","hashOfConfig":"17"},{"size":3066,"mtime":1608914161295,"results":"26","hashOfConfig":"17"},{"size":1023,"mtime":1608282954373,"results":"27","hashOfConfig":"17"},{"size":1285,"mtime":1608297276036,"results":"28","hashOfConfig":"17"},{"size":765,"mtime":1608374402715,"results":"29","hashOfConfig":"17"},{"size":2009,"mtime":1608450297084,"results":"30","hashOfConfig":"17"},{"size":5315,"mtime":1608915334383,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},"112nzf5",{"filePath":"35","messages":"36","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},{"filePath":"41","messages":"42","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"47","messages":"48","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"34"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"34"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"34"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"34"},{"filePath":"66","messages":"67","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"68","usedDeprecatedRules":"34"},"D:\\CaroOnline\\src\\front-end\\src\\index.js",[],["69","70"],"D:\\CaroOnline\\src\\front-end\\src\\App.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\demoRealtime.js",["71","72"],"import React, { useState, useEffect } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\n\r\n// WEBSOCKET CLIENT SIDE\r\nconst ws = (() => {\r\n    // private\r\n    // singleton instance\r\n    let ws = undefined;\r\n    let lazyUpdate = {};\r\n\r\n    // public\r\n    function createConnection(userId, callback) {\r\n        destroyConnection();\r\n        ws = new WebSocket(\"ws://localhost:3001?userId=\" + userId);\r\n        ws.addEventListener(\"message\", ({ data: message }) => {\r\n            let topicName = message.split(\">>>\")[0];\r\n            if (lazyUpdate[topicName] > 0)\r\n                lazyUpdate[topicName] -= 1;\r\n            else\r\n                callback();\r\n        });\r\n    }\r\n\r\n    function destroyConnection() {\r\n        if (ws)\r\n            ws.close();\r\n        ws = undefined;\r\n    }\r\n\r\n    function notifyChange(topicName) {\r\n        ws.send(`${topicName}>>>changed`);\r\n        lazyUpdate[topicName] = (lazyUpdate[topicName] | 0) + 1;\r\n    }\r\n\r\n    return {\r\n        createConnection,\r\n        destroyConnection,\r\n        notifyChange\r\n    }\r\n})();\r\n\r\n// API\r\nasync function getActiveUsers() {\r\n    let response = await fetch('http://localhost:3001/active-users');\r\n    response = await response.json();\r\n    return response;\r\n}\r\n\r\n// HELPERS\r\nfunction refreshConnection(e, userId, setActiveUsers) {\r\n    if (e.charCode != 13)\r\n        return;\r\n    // when user press enter\r\n    // renew connection with new userId\r\n    ws.createConnection(userId,async ()=>{\r\n        // load list of active users\r\n        let activeUsers = await getActiveUsers();\r\n        setActiveUsers(activeUsers);\r\n    });\r\n}\r\n\r\nexport default function DemoRealtime(props) {\r\n    const [activeUsers, setActiveUsers] = useState([]);\r\n    const [userId, setUserId] = useState('');\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const token = localStorage.getItem(\"token\");\r\n         \r\n        // if the user is not authorized, redirect to login page\r\n        if (!token) { // TODO\r\n            history.push('/signin');\r\n            return;\r\n        }\r\n\r\n        (async () => {\r\n            // load list of active users\r\n            let activeUsers = await getActiveUsers();\r\n            setActiveUsers(activeUsers);\r\n        })();\r\n    }, []);\r\n\r\n    let listItems=[];\r\n    for (let userId in activeUsers) {\r\n        listItems.push(\r\n            <li key={userId}>\r\n                {userId}\r\n            </li>\r\n        );\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <p>User id:</p>\r\n            <input\r\n                type=\"text\"\r\n                onChange={e => setUserId(e.target.value)}\r\n                onKeyPress={e => refreshConnection(e, userId, setActiveUsers)}\r\n            ></input>\r\n            <hr/>\r\n            <p>Active users:</p>\r\n            <ul>\r\n                {listItems}\r\n            </ul>\r\n        </div>\r\n    );\r\n}",["73","74"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Login\\index.js",["75","76"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Home\\index.js",["77","78","79","80"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Register\\index.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\index.js",["81","82","83","84","85"],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\square.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\Board\\chat.js",["86","87","88","89","90"],"D:\\CaroOnline\\src\\front-end\\src\\api\\userApi.js",["91","92"],"import axiosClient from \"./axiosClient\";\r\nimport axios from 'axios';\r\n\r\nconst userApi = {\r\n    login: async (username, password) => {\r\n        let response;\r\n        try {\r\n            response = await axios.post('http://localhost:3001/login', {\r\n                username: username,\r\n                password: password\r\n            })\r\n        } catch (e) {\r\n            response = e.response.data;\r\n        }\r\n        return response;\r\n    },\r\n    register: async (email, username, password) => {\r\n        const url = '/register';\r\n        const response = await axiosClient.post(url, {\r\n            email: email,\r\n            username: username,\r\n            password: password\r\n        });\r\n        return response;\r\n    },\r\n    validate: async (username) => {\r\n        const url = `/validate/${username}`;\r\n        const response = await axiosClient.post(url);\r\n        return response;\r\n    },\r\n    getAllBoards: async () => {\r\n        const url = '/board/get_all_boards';\r\n        let response;\r\n        try {\r\n            response = await axiosClient.get(url);\r\n        } catch (e) {\r\n            response = e.response.data;\r\n        }\r\n        return response;\r\n    },\r\n    getBoard: async function (boardId) {\r\n        let boards = await this.getAllBoards();\r\n        if (boards.message) {\r\n            return boards;\r\n        }\r\n        for (let i = 0; i < boards.length; i++) {\r\n            if (boards[i].boardId == boardId)\r\n                return boards[i];\r\n        }\r\n    },\r\n    takeTurn: async function (boardId, row, col) {\r\n        const url = `/board/make_turn?boardId=${boardId}&row=${row}&col=${col}`;\r\n        const response = await axiosClient.get(url);\r\n        return response;\r\n    },\r\n    joinBoard: async function (boardId) {\r\n        const url = '/board/join_board?boardId=' + boardId;\r\n        const response = await axiosClient.get(url);\r\n        return response;\r\n    },\r\n    createBoard: async function (boardId, name) {\r\n        const url = '/board/create_board?boardId=' + boardId + '&name=' + name;\r\n        const response = await axiosClient.get(url);\r\n        return response;\r\n    },\r\n    getBoardChat: async function (boardId) {\r\n        const url = '/board/get_board_chat?boardId=' + boardId;\r\n        const response = await axiosClient.get(url);\r\n        return response;\r\n    },\r\n    makeMessage: async function (boardId, time, content) {\r\n        const url = '/board/make_message?boardId=' + boardId + '&time=' + time + '&content=' + content;\r\n        const response = await axiosClient.get(url);\r\n        return response;\r\n    },\r\n    getUsers: async function () {\r\n        const url = '/users';\r\n        const response = await axiosClient.get(url);\r\n        return response;\r\n    },\r\n    getOneUser: async function (username) {\r\n        let users = await this.getUsers();\r\n        if (users.message) {\r\n            return users;\r\n        }\r\n        for (let i = 0; i < users.length; i++) {\r\n            if (users[i].username == username)\r\n                return users[i];\r\n        }\r\n    }\r\n}\r\n\r\nexport default userApi;","D:\\CaroOnline\\src\\front-end\\src\\api\\axiosClient.js",[],"D:\\CaroOnline\\src\\front-end\\src\\webSocketClient.js",[],"D:\\CaroOnline\\src\\front-end\\src\\components\\CheckMail\\index.js",["93","94"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container:{\r\n        height: '500px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    notification:{\r\n        fontSize: '2.5vw',\r\n        textAlign: 'center'\r\n    }\r\n}));\r\n\r\nexport default function CheckMail(props) {\r\n    const classes = useStyles();\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.notification}>\r\n                <b>Register completed!</b>\r\n                <br/>\r\n                One more step, check out your mail to finish the comfirmation!\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\MailValidate\\index.js",["95","96"],"import React, { useState, useEffect } from 'react';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { useHistory } from 'react-router-dom';\r\nimport api from '../../api/userApi';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    container: {\r\n        height: '500px',\r\n        display: 'flex',\r\n        justifyContent: 'center',\r\n        alignItems: 'center'\r\n    },\r\n    notification: {\r\n        fontSize: '2.5vw',\r\n        textAlign: 'center'\r\n    },\r\n    loading: {\r\n        width: '1em',\r\n        height: '1em',\r\n        display: 'inline-block',\r\n        textAlign: 'left'\r\n    }\r\n}));\r\n\r\nlet createCallback=0;\r\nconst timeInterval=200;\r\n\r\nexport default function MailValidate(props) {\r\n    const classes = useStyles();\r\n    const [loading, setLoading] = useState('...');\r\n    const history = useHistory();\r\n\r\n    // update loading\r\n    let current=new Date().getTime();\r\n    // create only 1 callback at a time\r\n    if (current-createCallback>=timeInterval){\r\n        createCallback=current;\r\n        setTimeout(() => {\r\n            if (loading.length < 3) {\r\n                setLoading(loading + '.');\r\n            } else {\r\n                setLoading('');\r\n            }\r\n        }, timeInterval);\r\n    }\r\n\r\n    useEffect(async () => {\r\n        // get username from url\r\n        let username = (new URL(document.location)).searchParams.get('username');\r\n        // call api for validation\r\n        await api.validate(username);\r\n        // delete all local storages on App\r\n        localStorage.setItem(\"username\", \"\");\r\n        localStorage.setItem(\"loginStatus\", \"false\");\r\n        localStorage.setItem(\"token\", \"\");\r\n        setTimeout(() => history.push('/signin'), 5000);\r\n    }, []);\r\n\r\n    return (\r\n        <div className={classes.container}>\r\n            <div className={classes.notification}>\r\n                <b>Almost done!</b>\r\n                <br />\r\n                Wait for a moment <div className={classes.loading}>{loading}</div>\r\n            </div>\r\n        </div>\r\n    );\r\n}","D:\\CaroOnline\\src\\front-end\\src\\components\\Profile\\index.js",["97"],"import React, { useEffect, useState } from 'react';\r\nimport { useHistory } from 'react-router-dom';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport CssBaseline from '@material-ui/core/CssBaseline';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport LockOutlinedIcon from '@material-ui/icons/LockOutlined';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Container from '@material-ui/core/Container';\r\nimport api from '../../api/userApi';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    paper: {\r\n        marginTop: theme.spacing(8),\r\n        display: 'flex',\r\n        flexDirection: 'column',\r\n        alignItems: 'center',\r\n    },\r\n    avatar: {\r\n        margin: theme.spacing(1),\r\n        backgroundColor: theme.palette.secondary.main,\r\n    },\r\n    form: {\r\n        width: '100%', // Fix IE 11 issue.\r\n        marginTop: theme.spacing(3),\r\n    },\r\n    submit: {\r\n        margin: theme.spacing(3, 0, 2),\r\n    },\r\n}));\r\n\r\nexport default function UserProfile() {\r\n    const classes = useStyles();\r\n    const history = useHistory();\r\n    const [user, setUser] = useState({});\r\n\r\n    // const username = (new URL(document.location)).searchParams.get('user');\r\n    // const email = (new URL(document.location)).searchParams.get('email');\r\n    // const token = localStorage.getItem(\"token\");\r\n\r\n    useEffect(()=>{\r\n        const username = (new URL(document.location)).searchParams.get('user');\r\n        \r\n        (async ()=>{\r\n            let response = await api.getOneUser(username);\r\n            if (response.message) {\r\n                history.push('/signin');\r\n                return;\r\n            }\r\n            // console.log(response);\r\n            setUser(response);\r\n        })();\r\n    },[]);\r\n\r\n    // if (!token) {\r\n    //     history.push('/signin');\r\n    // }\r\n\r\n    function handleSubmit(e) {\r\n        // fetch(`${config.uriPath}/users`, {\r\n        //     method: 'PUT',\r\n        //     headers: {\r\n        //         'Content-Type': 'application/json',\r\n        //         \"userID\": userID\r\n        //     },\r\n        //     body: JSON.stringify({\r\n        //         \"name\": nameText,\r\n        //         \"password\": passwordText\r\n        //     })\r\n        // }).then(resp => resp.json())\r\n        //     .then(data => {\r\n        //         console.log(data);\r\n        //         if (data.code === 0) {\r\n        //             history.push('/');\r\n        //             handleEditProfile();\r\n        //             alert(\"Update profile successfully!\");\r\n\r\n        //         } else {\r\n        //             alert('Update failed. Please fill out password fields to update!');\r\n        //         }\r\n\r\n        //         //loadData();\r\n        //         //setOpen(false);\r\n        //     })\r\n\r\n        // e.preventDefault();\r\n    }\r\n\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"xs\">\r\n            <CssBaseline />\r\n            <div className={classes.paper}>\r\n                <Avatar className={classes.avatar}>\r\n                    <LockOutlinedIcon />\r\n                </Avatar>\r\n                <Typography component=\"h1\" variant=\"h5\">\r\n                    Profile\r\n                </Typography>\r\n                <form method='PUT' className={classes.form} onSubmit={handleSubmit}>\r\n                    <Grid container spacing={2}>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"username\"\r\n                                variant=\"outlined\"\r\n                                fullWidth\r\n                                value={user.username || ''}\r\n                                disabled\r\n                                id=\"username\"\r\n                                label=\"Username\"\r\n                            />\r\n                        </Grid>\r\n                        <Grid item xs={12}>\r\n                            <TextField\r\n                                autoComplete=\"fname\"\r\n                                name=\"email\"\r\n                                variant=\"outlined\"\r\n                                required\r\n                                fullWidth\r\n                                value={user.email || ''}\r\n                                disabled\r\n                                id=\"email\"\r\n                                label=\"Email\"\r\n                            />\r\n                        </Grid>\r\n                    </Grid>\r\n                    {/* <Button\r\n                        type=\"submit\"\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                    >\r\n                        Submit\r\n                    </Button> */}\r\n                    {/* <Button\r\n                        fullWidth\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        className={classes.submit}\r\n                        onClick={handleCancel}\r\n                    >\r\n                        Cancel\r\n                    </Button> */}\r\n                </form>\r\n            </div>\r\n        </Container>\r\n    );\r\n}",{"ruleId":"98","replacedBy":"99"},{"ruleId":"100","replacedBy":"101"},{"ruleId":"102","severity":1,"message":"103","line":51,"column":20,"nodeType":"104","messageId":"105","endLine":51,"endColumn":22},{"ruleId":"106","severity":1,"message":"107","line":81,"column":8,"nodeType":"108","endLine":81,"endColumn":10,"suggestions":"109"},{"ruleId":"98","replacedBy":"110"},{"ruleId":"100","replacedBy":"111"},{"ruleId":"106","severity":1,"message":"112","line":43,"column":8,"nodeType":"108","endLine":43,"endColumn":10,"suggestions":"113"},{"ruleId":"102","severity":1,"message":"114","line":58,"column":34,"nodeType":"104","messageId":"105","endLine":58,"endColumn":36},{"ruleId":"115","severity":1,"message":"116","line":6,"column":22,"nodeType":"117","messageId":"118","endLine":6,"endColumn":26},{"ruleId":"119","severity":1,"message":"120","line":98,"column":25,"nodeType":"121","messageId":"122","endLine":113,"endColumn":26},{"ruleId":"106","severity":1,"message":"107","line":124,"column":8,"nodeType":"108","endLine":124,"endColumn":10,"suggestions":"123"},{"ruleId":"102","severity":1,"message":"114","line":236,"column":39,"nodeType":"104","messageId":"105","endLine":236,"endColumn":41},{"ruleId":"115","severity":1,"message":"124","line":32,"column":11,"nodeType":"117","messageId":"118","endLine":32,"endColumn":18},{"ruleId":"102","severity":1,"message":"114","line":45,"column":34,"nodeType":"104","messageId":"105","endLine":45,"endColumn":36},{"ruleId":"102","severity":1,"message":"114","line":45,"column":63,"nodeType":"104","messageId":"105","endLine":45,"endColumn":65},{"ruleId":"106","severity":1,"message":"125","line":75,"column":8,"nodeType":"108","endLine":75,"endColumn":10,"suggestions":"126"},{"ruleId":"102","severity":1,"message":"114","line":85,"column":58,"nodeType":"104","messageId":"105","endLine":85,"endColumn":60},{"ruleId":"115","severity":1,"message":"127","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":26},{"ruleId":"102","severity":1,"message":"114","line":14,"column":29,"nodeType":"104","messageId":"105","endLine":14,"endColumn":31},{"ruleId":"102","severity":1,"message":"114","line":36,"column":63,"nodeType":"104","messageId":"105","endLine":36,"endColumn":65},{"ruleId":"102","severity":1,"message":"114","line":36,"column":99,"nodeType":"104","messageId":"105","endLine":36,"endColumn":101},{"ruleId":"102","severity":1,"message":"114","line":74,"column":46,"nodeType":"104","messageId":"105","endLine":74,"endColumn":48},{"ruleId":"102","severity":1,"message":"114","line":47,"column":35,"nodeType":"104","messageId":"105","endLine":47,"endColumn":37},{"ruleId":"102","severity":1,"message":"114","line":87,"column":35,"nodeType":"104","messageId":"105","endLine":87,"endColumn":37},{"ruleId":"115","severity":1,"message":"128","line":1,"column":17,"nodeType":"117","messageId":"118","endLine":1,"endColumn":25},{"ruleId":"115","severity":1,"message":"127","line":1,"column":27,"nodeType":"117","messageId":"118","endLine":1,"endColumn":36},{"ruleId":"106","severity":1,"message":"129","line":47,"column":15,"nodeType":"130","endLine":57,"endColumn":6},{"ruleId":"106","severity":1,"message":"107","line":57,"column":8,"nodeType":"108","endLine":57,"endColumn":10,"suggestions":"131"},{"ruleId":"106","severity":1,"message":"107","line":54,"column":7,"nodeType":"108","endLine":54,"endColumn":9,"suggestions":"132"},"no-native-reassign",["133"],"no-negated-in-lhs",["134"],"eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'history'. Either include it or remove the dependency array.","ArrayExpression",["135"],["133"],["134"],"React Hook useEffect has missing dependencies: 'history' and 'token'. Either include them or remove the dependency array.",["136"],"Expected '===' and instead saw '=='.","no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","default-case","Expected a default case.","SwitchStatement","missingDefaultCase",["137"],"'classes' is assigned a value but never used.","React Hook useEffect has missing dependencies: 'boardId' and 'history'. Either include them or remove the dependency array.",["138"],"'useEffect' is defined but never used.","'useState' is defined but never used.","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression",["139"],["140"],"no-global-assign","no-unsafe-negation",{"desc":"141","fix":"142"},{"desc":"143","fix":"144"},{"desc":"141","fix":"145"},{"desc":"146","fix":"147"},{"desc":"141","fix":"148"},{"desc":"141","fix":"149"},"Update the dependencies array to be: [history]",{"range":"150","text":"151"},"Update the dependencies array to be: [history, token]",{"range":"152","text":"153"},{"range":"154","text":"151"},"Update the dependencies array to be: [boardId, history]",{"range":"155","text":"156"},{"range":"157","text":"151"},{"range":"158","text":"151"},[2245,2247],"[history]",[1365,1367],"[history, token]",[3914,3916],[2628,2630],"[boardId, history]",[1700,1702],[1833,1835]]